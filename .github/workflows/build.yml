name: Build Electron Application

on: [push, pull_request]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run package

      - name: Get version and commit hash
        id: get-version
        run: |
          node get-version.js
          echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        shell: bash


      - name: Rename and zip the build
        run: |
          mv release/build/win-unpacked "SDStudio-${{ env.version }}-${{ env.commit_hash }}"
          7z a "SDStudio-${{ env.version }}-${{ env.commit_hash }}.zip" "SDStudio-${{ env.version }}-${{ env.commit_hash }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: SDStudio-windows-${{ env.version }}-${{ env.commit_hash }}
          path: "SDStudio-${{ env.version }}-${{ env.commit_hash }}.zip"


  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3

      # - name: Decode and import the certificate
      #   env:
      #     MACOS_CERTIFICATE_P12: ${{ secrets.MACOS_CERTIFICATE_P12 }}
      #     MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      #   run: |
      #     echo "$MACOS_CERTIFICATE_P12" | base64 --decode > certificate.p12
      #     security create-keychain -p "" build.keychain
      #     security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
      #     security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
      #
      # - name: Set up environment variables
      #   env:
      #     APPLE_ID: ${{ secrets.APPLE_ID }}
      #     APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      #   run: echo "KEYCHAIN=build.keychain" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          npm install
          cd release/app
          npm install --include=optional sharp@0.32.6

      - name: Build the application
        run: npm run package

      - name: Get version and commit hash
        id: get-version
        run: |
          version=$(jq -r '.version' release/app/package.json)
          echo "version=$version" >> $GITHUB_ENV
          commit_hash=$(git rev-parse --short HEAD)
          echo "commit_hash=$commit_hash" >> $GITHUB_ENV

      - name: Rename DMG files
        run: |
          mv "release/build/SDStudio-${{ env.version }}.dmg" "release/build/SDStudio-${{ env.version }}-${{ env.commit_hash }}.dmg"
          mv "release/build/SDStudio-${{ env.version }}-arm64.dmg" "release/build/SDStudio-${{ env.version }}-arm64-${{ env.commit_hash }}.dmg"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: SDStudio-mac-${{ env.version }}-${{ env.commit_hash }}
          path: |
            release/build/SDStudio-${{ env.version }}-${{ env.commit_hash }}.dmg
            release/build/SDStudio-${{ env.version }}-arm64-${{ env.commit_hash }}.dmg
